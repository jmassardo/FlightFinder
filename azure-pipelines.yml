trigger:
  - master

stages:
  - stage: Build
    jobs:
    - job: Build
      pool:
        vmImage: 'windows-latest'
      continueOnError: true
      steps:
      - powershell: systeminfo
      - task: vsts-habitat-install@3
      - task: vsts-habitat-signing-key@3
        displayName: 'Signing Origin Key: install'
        inputs:
          habitatOrigin: bldr
      - task: vsts-habitat-build@3
        displayName: 'Build Habitat plan'
        inputs:
          habitatOrigin: bldr
        env:
          HAB_LICENSE: accept-no-persist
      - task: vsts-habitat-expose-habitat-build-vars@3
        displayName: 'Expose Habitat Build Variables'
        inputs:
          habitatSetBuildNumber: true
      - powershell: |
          . $(System.DefaultWorkingDirectory)/results/last_build.ps1
          C:\ProgramData\habitat\hab.exe pkg export docker $(System.DefaultWorkingDirectory)/results/jmassardo-flightfinder-$(Build.BuildNumber)-x86_64-windows.hart
          docker tag jmassardo/flightfinder jrmregistry.azurecr.io/flightfinder
          docker tag jmassardo/flightfinder gcr.io/habitat-kubernetes-playland/flightfinder
        displayName: 'Export HART to Docker'
        env:
          HAB_LICENSE: accept-no-persist
      - task: Docker@2
        displayName: 'Upload to ACS'
        inputs:
          containerRegistry: 'acs'
          repository: 'flightfinder'
          command: 'push'
          tags: 'latest'
      - task: Docker@2
        displayName: 'Upload to Docker Hub'
        inputs:
          containerRegistry: 'dockerhub'
          repository: 'jmassardo/flightfinder'
          command: 'push'
          tags: 'latest'
      - task: Docker@2
        displayName: 'Upload to GCR'
        inputs:
          containerRegistry: 'GCR'
          repository: 'habitat-kubernetes-playland/flightfinder'
          command: 'push'
          tags: 'latest'

  - stage: DeployToDev
    jobs:
    - deployment: deployment
      pool:
        vmImage: 'windows-latest'
      environment: 'dev'
      strategy:
        runOnce:
          deploy:
            steps:
            - task: Kubernetes@1
              inputs:
                connectionType: 'Kubernetes Service Connection'
                kubernetesServiceEndpoint: 'jrm-flightfinder'
                command: 'set'
                arguments: 'image deployment/flightfinder flightfinder=jrmregistry.azurecr.io/jmassardo/flightfinder:0.1.0 --record'
                secretType: 'dockerRegistry'
                containerRegistryType: 'Azure Container Registry'